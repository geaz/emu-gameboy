#pragma once
#ifndef INSTRUCTION_INCLUDE_H
#define INSTRUCTION_INCLUDE_H

#include <functional>

#include "groups/aritmetic.h"
#include "groups/branch.h"
#include "groups/transfer.h"
#include "groups/misc.h"
#include "groups/prefix.h"

typedef uint8_t (*OpcodeFunc)(Cpu*);
struct Instruction
{
    uint8_t length;                 // Byte Length of the Instruction
    char* mnemonic;                 // Mnemonic of the Instruction
    OpcodeFunc executeInterpreter;  // Function Pointer to execute interpreter mode for given opcode
    //TODO OpcodeFunc? eecuteJit;   // Function Pointer to execute jit mode for given opcode
};

struct ParsedBytes
{
    uint8_t opcode = 0;
    uint8_t low = 0;
    uint8_t high = 0;
    uint16_t b16 = 0;
};

struct ParsedInstruction
{
    long bytePosition;
    Instruction definition;
    ParsedBytes parsedBytes;
};

class InstructionSet
{
    public:
        InstructionSet()
        {  
${instruction_items}     
${prefix_items}        }

        Instruction set[0x100]; 
        Instruction prefixSet[0x100];   
};

#endif // INSTRUCTION_INCLUDE_H